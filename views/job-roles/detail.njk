{% extends "layout.njk" %}

{% block title %}{{ jobRole.name }} - Kainos Careers{% endblock %}

{% block head %}
<style>
  html {
    scroll-behavior: smooth;
  }
  
  /* Modal styles to ensure it appears above everything */
  #applicationModal {
    z-index: 9999 !important;
    position: fixed !important;
    top: 0 !important;
    left: 0 !important;
    width: 100vw !important;
    height: 100vh !important;
    animation: fadeIn 0.2s ease-out;
  }
  
  /* Prevent background scroll when modal is open */
  body.modal-open {
    overflow: hidden;
  }
  
  /* Ensure modal content appears above backdrop */
  #applicationModal > div {
    z-index: 10000 !important;
    position: relative !important;
    animation: slideInUp 0.3s ease-out;
  }
  
  /* Modal animations */
  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }
  
  @keyframes slideInUp {
    from { 
      opacity: 0;
      transform: translateY(20px) scale(0.95);
    }
    to { 
      opacity: 1;
      transform: translateY(0) scale(1);
    }
  }
  
  /* Button hover effects */
  .hire-btn {
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
  }
  
  .hire-btn:hover {
    transform: translateY(-2px) scale(1.05);
    box-shadow: 0 8px 16px rgba(110, 170, 58, 0.4);
  }
  
  .hire-btn:active {
    transform: translateY(0) scale(1);
  }
  
  .reject-btn {
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
  }
  
  .reject-btn:hover {
    transform: translateY(-2px) scale(1.05);
    box-shadow: 0 8px 16px rgba(220, 38, 38, 0.4);
  }
  
  .reject-btn:active {
    transform: translateY(0) scale(1);
  }
  
  .delete-btn {
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
  }
  
  .delete-btn:hover {
    transform: translateY(-2px) scale(1.05);
    box-shadow: 0 12px 24px rgba(220, 38, 38, 0.5);
    background-color: #b91c1c !important;
  }
  
  .delete-btn:active {
    transform: translateY(0) scale(1);
  }
  
  /* View CV Button Styles */
  .cv-view-btn {
    position: relative;
    overflow: hidden;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }
  
  .cv-view-btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transition: left 0.5s;
  }
  
  .cv-view-btn:hover::before {
    left: 100%;
  }
  
  .cv-view-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 16px rgba(110, 170, 58, 0.3);
    background-color: #6EAA3A !important;
  }
  
  .cv-view-btn:active {
    transform: translateY(0) scale(0.98);
    box-shadow: 0 2px 6px rgba(110, 170, 58, 0.2);
  }
  
  .cv-view-btn svg {
    transition: transform 0.3s ease;
  }
  
  .cv-view-btn:hover svg {
    transform: scale(1.1) rotate(-5deg);
  }
</style>
{% endblock %}

{% block content %}
<div class="container mx-auto px-4 py-8 max-w-6xl">
  <!-- Success Alert - Prominent and Readable -->
  {% if applicationSubmitted %}
  <div id="successAlert" role="alert" class="alert bg-kainos-light border-4 border-kainos-green shadow-2xl mb-8 p-6 rounded-xl">
    {{ icon('check-circle', 'stroke-kainos-green shrink-0 h-12 w-12') | safe }}
    <div class="flex-1">
      <h3 class="font-bold text-2xl mb-2 text-kainos-primary">üéâ Application Submitted Successfully!</h3>
      <div class="text-base text-kainos-dark">
        <p class="mb-2">Your application has been received and saved to our database.</p>
        {% if applicationId %}
        <p class="font-semibold text-kainos-green text-lg">Application ID: {{ applicationId }}</p>
        {% endif %}
        <p class="text-sm mt-2 text-gray-600">We'll review your application and get back to you soon.</p>
      </div>
    </div>
    <button onclick="dismissSuccessAlert()" class="btn btn-sm btn-circle btn-ghost hover:bg-kainos-green hover:text-white text-kainos-primary">
      {{ icon('x', 'h-6 w-6') | safe }}
    </button>
  </div>
  {% endif %}

  <!-- Hire Success Alert -->
  {% if hired %}
  <div id="hireAlert" role="alert" class="alert bg-green-50 border-4 border-green-500 shadow-2xl mb-8 p-6 rounded-xl">
    {{ icon('check-circle', 'stroke-green-600 shrink-0 h-12 w-12') | safe }}
    <div class="flex-1">
      <h3 class="font-bold text-2xl mb-2 text-green-700">üéâ Applicant Hired Successfully!</h3>
      <div class="text-base text-green-600">
        <p class="mb-2">The applicant has been hired and their status has been updated.</p>
        <p class="text-sm mt-2">The number of open positions has been reduced by 1.</p>
      </div>
    </div>
    <button onclick="dismissAlert('hireAlert')" class="btn btn-sm btn-circle btn-ghost hover:bg-green-500 hover:text-white text-green-600">
      {{ icon('x', 'h-6 w-6') | safe }}
    </button>
  </div>
  {% endif %}

  <!-- Reject Success Alert -->
  {% if rejected %}
  <div id="rejectAlert" role="alert" class="alert bg-orange-50 border-4 border-orange-500 shadow-2xl mb-8 p-6 rounded-xl">
    {{ icon('alert-triangle', 'stroke-orange-600 shrink-0 h-12 w-12') | safe }}
    <div class="flex-1">
      <h3 class="font-bold text-2xl mb-2 text-orange-700">Application Rejected</h3>
      <div class="text-base text-orange-600">
        <p class="mb-2">The applicant has been rejected and their status has been updated.</p>
      </div>
    </div>
    <button onclick="dismissAlert('rejectAlert')" class="btn btn-sm btn-circle btn-ghost hover:bg-orange-500 hover:text-white text-orange-600">
      {{ icon('x', 'h-6 w-6') | safe }}
    </button>
  </div>
  {% endif %}

  <!-- Error Alert -->
  {% if error %}
  <div id="errorAlert" role="alert" class="alert bg-red-50 border-4 border-red-500 shadow-2xl mb-8 p-6 rounded-xl">
    {{ icon('alert-circle', 'stroke-red-600 shrink-0 h-12 w-12') | safe }}
    <div class="flex-1">
      <h3 class="font-bold text-2xl mb-2 text-red-700">‚ùå Error</h3>
      <div class="text-base text-red-600">
        <p class="mb-2">{{ error }}</p>
      </div>
    </div>
    <button onclick="dismissAlert('errorAlert')" class="btn btn-sm btn-circle btn-ghost hover:bg-red-500 hover:text-white text-red-600">
      {{ icon('x', 'h-6 w-6') | safe }}
    </button>
  </div>
  {% endif %}

  <!-- Page Title -->
  <div class="text-center mb-8">
    <h1 class="text-5xl md:text-6xl font-bold kainos-text-gradient mb-4">Job Details</h1>
    <p class="text-lg text-base-content/70">Join the Kainos team and make an impact</p>
  </div>
  
  <!-- Main Job Card -->
  <div class="card bg-base-100 shadow-2xl border-t-4 border-kainos-green">
    <div class="card-body">
      <!-- Job Role Name with Badge -->
      <div class="flex flex-col md:flex-row justify-between items-center mb-6 gap-4">
        <h2 class="card-title text-3xl md:text-4xl kainos-text-gradient">{{ jobRole.name }}</h2>
        <div class="badge badge-lg {% if jobRole.status == 'Open' %}bg-kainos-green text-white border-kainos-green{% elif jobRole.status == 'Closing Soon' %}badge-warning{% else %}badge-error{% endif %}">
          {{ jobRole.status or 'Active' }}
        </div>
      </div>
      
      <div class="divider"></div>
      
      <!-- Key Stats -->
      <div class="stats stats-vertical lg:stats-horizontal shadow mb-8 w-full bg-kainos-light">
        <div class="stat">
          <div class="stat-figure text-kainos-primary">
            {{ icon('map-pin', 'inline-block w-8 h-8 stroke-current') | safe }}
          </div>
          <div class="stat-title text-kainos-primary font-semibold">Location</div>
          <div class="stat-value text-2xl text-kainos-primary">{{ jobRole.location }}</div>
        </div>
        
        <div class="stat">
          <div class="stat-figure text-kainos-green">
            {{ icon('lightbulb', 'inline-block w-8 h-8 stroke-current') | safe }}
          </div>
          <div class="stat-title text-kainos-primary font-semibold">Capability</div>
          <div class="stat-value text-2xl text-kainos-primary">{{ jobRole.capability }}</div>
        </div>
        
        <div class="stat">
          <div class="stat-figure text-kainos-green">
            {{ icon('trending-up', 'inline-block w-8 h-8 stroke-current') | safe }}
          </div>
          <div class="stat-title text-kainos-primary font-semibold">Band</div>
          <div class="stat-value text-2xl text-kainos-primary">{{ jobRole.band }}</div>
        </div>
      </div>
      
      <!-- Additional Information -->
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
        <div class="alert bg-kainos-light border-2 border-kainos-primary shadow-lg">
          {{ icon('info', 'stroke-kainos-primary shrink-0 w-6 h-6') | safe }}
          <div>
            <h3 class="font-bold text-kainos-primary">Open Positions</h3>
            <div class="text-sm text-kainos-primary">{{ jobRole.openPositions or 'Not specified' }}</div>
          </div>
        </div>
        
        <div class="alert bg-kainos-light border-2 border-kainos-green shadow-lg">
          {{ icon('clock', 'stroke-kainos-green shrink-0 w-6 h-6') | safe }}
          <div>
            <h3 class="font-bold text-kainos-primary">Closing Date</h3>
            <div class="text-sm text-kainos-primary">{{ jobRole.closingDate.toLocaleDateString() if jobRole.closingDate else 'Not specified' }}</div>
          </div>
        </div>
      </div>
      
      {% if jobRole.jobSpecUrl %}
      <div class="mb-6">
        <a href="{{ jobRole.jobSpecUrl }}" target="_blank" rel="noopener noreferrer" class="btn-kainos-outline shadow-md hover:shadow-lg inline-flex items-center gap-2">
          {{ icon('file-text', 'h-5 w-5') | safe }}
          <span>View Job Spec (SharePoint)</span>
        </a>
      </div>
      {% endif %}
      
      <!-- Description Section -->
      {% if jobRole.description %}
      <div class="mb-8">
        <h3 class="text-2xl font-semibold text-kainos-primary mb-4 flex items-center gap-2">
          <span class="w-1 h-8 bg-kainos-green"></span>
          Job Description
        </h3>
        <div class="prose max-w-none bg-kainos-light p-6 rounded-lg border-l-4 border-kainos-primary">
          <p class="text-lg leading-relaxed text-gray-700">{{ jobRole.description }}</p>
        </div>
      </div>
      {% endif %}
      
      <!-- Responsibilities Section -->
      {% if jobRole.responsibilities %}
      <div>
        <h3 class="text-2xl font-semibold text-kainos-primary mb-4 flex items-center gap-2">
          <span class="w-1 h-8 bg-kainos-green"></span>
          Key Responsibilities
        </h3>
        <div class="prose max-w-none bg-kainos-light p-6 rounded-lg border-l-4 border-kainos-green">
          {% if jobRole.responsibilities is string %}
            <p class="text-lg leading-relaxed text-gray-700">{{ jobRole.responsibilities }}</p>
          {% else %}
            <ul class="space-y-2 list-disc list-inside">
              {% for responsibility in jobRole.responsibilities %}
                <li class="text-lg text-gray-700">{{ responsibility }}</li>
              {% endfor %}
            </ul>
          {% endif %}
        </div>
      </div>
      {% endif %}
    </div>
  </div>

  <!-- Admin Applications Section -->
  {% if user and user.role === 'admin' %}
  <div id="applications-section" class="card bg-base-100 shadow-2xl border-t-4 border-kainos-primary mt-8">
    <div class="card-body">
      <h3 class="text-3xl font-semibold text-kainos-primary mb-6 flex items-center gap-3">
        {{ icon('users', 'h-8 w-8') | safe }}
        Applications ({{ applications.length if applications else 0 }})
      </h3>
      
      {% if applications and applications.length > 0 %}
      <div class="overflow-x-auto">
        <table class="table table-zebra w-full">
          <thead>
            <tr class="bg-kainos-light">
              <th class="text-kainos-primary font-semibold">Applicant</th>
              <th class="text-kainos-primary font-semibold">CV/Resume</th>
              <th class="text-kainos-primary font-semibold">Status</th>
              <th class="text-kainos-primary font-semibold">Applied Date</th>
              <th class="text-kainos-primary font-semibold">View Application</th>
              <th class="text-kainos-primary font-semibold">Actions</th>
            </tr>
          </thead>
          <tbody>
            {% for application in applications %}
            <tr class="hover:bg-kainos-light/50">
              <td>
                <span class="font-semibold text-gray-700">{{ application.displayName }}</span>
              </td>
              <td>
                <span class="cv-link-cell" data-application-id="{{ application.applicationID }}">
                  <!-- CV link will be populated by JavaScript after parsing notes -->
                  <span class="text-gray-400 text-sm">Loading...</span>
                </span>
              </td>
              <td>
                <div class="badge badge-lg px-3 py-2 font-semibold
                  {% if application.status == 'Accepted' or application.status == 'Hired' %}
                    bg-kainos-green text-white border-kainos-green
                  {% elif application.status == 'Rejected' %}
                    bg-red-500 text-white border-red-500
                  {% elif application.status == 'Reviewed' %}
                    bg-yellow-500 text-white border-yellow-500
                  {% else %}
                    bg-kainos-primary text-white border-kainos-primary
                  {% endif %}">
                  {% if application.status == 'Accepted' %}
                    Hired
                  {% elif application.status == 'Pending' %}
                    In Progress
                  {% else %}
                    {{ application.status }}
                  {% endif %}
                </div>
              </td>
              <td class="text-sm text-gray-600">
                {{ application.formattedDate or 'N/A' }}
              </td>
              <td>
                <button onclick='viewApplicationDetails({{ application | dump | safe }})' 
                        class="btn btn-sm btn-kainos-outline hover:shadow-lg transition-all duration-200 flex items-center justify-center">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                  </svg>
                </button>
              </td>
              <td>
                {% if application.status == 'Pending' or application.status == 'In Progress' %}
                <div class="flex gap-2">
                  {% if jobRole.openPositions > 0 %}
                  <button onclick="confirmHire('{{ jobRole.id }}', '{{ application.applicationID }}', '{{ application.displayName }}')" 
                          class="btn btn-sm text-white border-none hire-btn" style="background-color: #6EAA3A;">
                    {{ icon('check', 'h-4 w-4') | safe }}
                    Hire
                  </button>
                  {% else %}
                  <button class="btn btn-sm btn-disabled" disabled title="No open positions available">
                    {{ icon('check', 'h-4 w-4') | safe }}
                    Hire
                  </button>
                  {% endif %}
                  <button onclick="confirmReject('{{ jobRole.id }}', '{{ application.applicationID }}', '{{ application.displayName }}')" 
                          class="btn btn-sm text-white border-none reject-btn" style="background-color: #dc2626;">
                    {{ icon('x', 'h-4 w-4') | safe }}
                    Reject
                  </button>
                </div>
                {% else %}
                <span class="text-gray-400 text-sm">No actions available</span>
                {% endif %}
              </td>
            </tr>
            {% endfor %}
          </tbody>
        </table>
      </div>
      {% else %}
      <div class="text-center py-8">
        {{ icon('file-text', 'h-10 w-10 mx-auto text-gray-300 mb-4') | safe }}
        <p class="text-gray-500 text-lg">No applications received yet</p>
        <p class="text-gray-400 text-sm">Applications will appear here when candidates apply for this position</p>
      </div>
      {% endif %}
    </div>
  </div>
  {% endif %}
</div>

<!-- Action Buttons with Kainos styling -->
<div class="mt-8 flex justify-center gap-6 flex-wrap items-center">
  {% if user and user.role !== 'admin' %}
  <!-- Regular User Apply Button -->
  {% if hasApplied %}
  <div class="alert bg-blue-50 border-4 border-blue-500 shadow-lg px-8 py-4 rounded-xl">
    <div class="flex items-center gap-3">
      {{ icon('check-circle', 'h-6 w-6 text-blue-600') | safe }}
      <div>
        <h3 class="font-bold text-blue-900">Already Applied</h3>
        <p class="text-sm text-blue-700">You have already submitted an application for this position.</p>
      </div>
    </div>
  </div>
  {% elif jobRole.status == 'Open' or jobRole.status == 'Closing Soon' or not jobRole.status %}
  <a href="/jobs/{{ jobRole.id }}/apply" class="btn-kainos shadow-lg hover:shadow-xl inline-flex items-center gap-3 px-8 py-4">
    {{ icon('file-plus', 'h-5 w-5') | safe }}
    <span>Apply for This Position</span>
  </a>
  {% else %}
  <button class="btn btn-disabled btn-lg" disabled>
    Applications Closed
  </button>
  {% endif %}
  {% endif %}
  
  {% if user and user.role === 'admin' %}
  <a href="/jobs/{{ jobRole.id }}/edit" class="btn-kainos-outline shadow-lg hover:shadow-xl inline-flex items-center gap-3 px-8 py-4">
    {{ icon('edit', 'h-5 w-5') | safe }}
    <span>Edit Job Role</span>
  </a>
  
  <button onclick="confirmDelete('{{ jobRole.id }}', '{{ jobRole.name }}')" class="bg-red-600 hover:bg-red-700 text-white font-semibold rounded-lg shadow-lg hover:shadow-xl transition-all inline-flex items-center gap-3 px-8 py-4 border-none cursor-pointer delete-btn" style="background-color: #dc2626;">
    {{ icon('trash-2', 'h-5 w-5') | safe }}
    <span>Delete Job Role</span>
  </button>
  {% endif %}
</div>

<!-- Back Button -->
<div class="mt-6 flex justify-center">
  <a href="/jobs" class="btn-kainos-outline shadow-md hover:shadow-lg flex items-center gap-2">
    {{ icon('arrow-left', 'h-5 w-5') | safe }}
    Back to Job List
  </a>
</div>

<!-- Hidden forms for actions -->
<form id="deleteForm" method="POST" style="display: none;">
</form>
<form id="hireForm" method="POST" style="display: none;">
</form>
<form id="rejectForm" method="POST" style="display: none;">
</form>

<!-- Application Details Modal -->
<div id="applicationModal" class="fixed inset-0 bg-black bg-opacity-60 backdrop-blur-sm flex items-center justify-center p-4 hidden" style="z-index: 9999;">
  <div class="bg-white rounded-lg shadow-2xl max-w-4xl w-full max-h-[90vh] overflow-y-auto relative border-2 border-gray-200" onclick="event.stopPropagation()" style="z-index: 10000; background-color: white !important;">
    <div class="sticky top-0 bg-white border-b-2 border-kainos-primary px-6 py-4 flex justify-between items-center" style="background-color: white !important;">
      <div>
        <h3 id="modalTitle" class="text-2xl font-bold text-kainos-primary">Application Details</h3>
        <p class="text-sm text-gray-500 mt-1">Press ESC or click outside to close</p>
      </div>
      <button id="closeModalBtn" class="btn btn-sm btn-circle btn-ghost hover:bg-red-100 hover:text-red-600 transition-colors">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd" />
        </svg>
      </button>
    </div>
    <div id="applicationContent" class="p-6">
      <div class="space-y-6">
        <!-- Personal Information Section -->
        <div class="bg-kainos-light p-4 rounded-lg">
          <h4 class="font-semibold text-kainos-primary mb-3 text-lg">Personal Information</h4>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <p><strong>First Name:</strong> <span id="modal-firstName">N/A</span></p>
            <p><strong>Last Name:</strong> <span id="modal-lastName">N/A</span></p>
            <p><strong>Email:</strong> <span id="modal-email">N/A</span></p>
            <p><strong>Phone Number:</strong> <span id="modal-phone">N/A</span></p>
          </div>
        </div>

        <!-- Professional Information Section -->
        <div class="bg-kainos-light p-4 rounded-lg">
          <h4 class="font-semibold text-kainos-primary mb-3 text-lg">Professional Information</h4>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <p><strong>Job Title:</strong> <span id="modal-jobTitle">N/A</span></p>
              <p><strong>Years of Experience:</strong> <span id="modal-experience">N/A</span></p>
            </div>
            <div>
              <p><strong>LinkedIn Profile:</strong> <span id="modal-linkedin">N/A</span></p>
            </div>
          </div>
        </div>

        <!-- Application Status Section -->
        <div class="bg-kainos-light p-4 rounded-lg">
          <h4 class="font-semibold text-kainos-primary mb-3 text-lg">Application Status</h4>
          <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
            <p><strong>Status:</strong> <span id="modal-status" class="badge badge-lg px-3 py-1 font-semibold">N/A</span></p>
            <p><strong>Applied Date:</strong> <span id="modal-date">N/A</span></p>
            <p><strong>Application ID:</strong> <span id="modal-applicationId">N/A</span></p>
          </div>
        </div>
        
        <!-- Cover Letter Section -->
        <div id="modal-coverLetterSection" class="bg-kainos-light p-4 rounded-lg hidden">
          <h4 class="font-semibold text-kainos-primary mb-3 text-lg">Cover Letter</h4>
          <div class="bg-white p-4 rounded border max-h-64 overflow-y-auto">
            <p id="modal-coverLetter" class="whitespace-pre-wrap"></p>
          </div>
        </div>
        
        <!-- Comments Section -->
        <div id="modal-commentsSection" class="bg-kainos-light p-4 rounded-lg hidden">
          <h4 class="font-semibold text-kainos-primary mb-3 text-lg">Additional Comments</h4>
          <div class="bg-white p-3 rounded border">
            <p id="modal-comments" class="whitespace-pre-wrap text-gray-700"></p>
          </div>
        </div>
        
        <!-- No Details Available Section -->
        <div id="modal-noDetailsSection" class="bg-kainos-light p-4 rounded-lg text-center hidden">
          <p class="text-gray-600">No additional application details available.</p>
          <p class="text-sm text-gray-500 mt-2">Only basic application information is shown above.</p>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
function confirmDelete(jobId, jobName) {
  if (confirm(`Are you sure you want to delete the job role "${jobName}"? This action cannot be undone.`)) {
    const form = document.getElementById('deleteForm');
    form.action = `/jobs/${jobId}/delete`;
    form.submit();
  }
}

function confirmHire(jobId, applicationId, applicantName) {
  if (confirm(`Are you sure you want to hire ${applicantName}? This will:\n\n‚Ä¢ Update their application status to "Hired"\n‚Ä¢ Reduce the number of open positions by 1\n\nThis action cannot be undone.`)) {
    const form = document.getElementById('hireForm');
    form.action = `/jobs/${jobId}/hire/${applicationId}`;
    form.submit();
  }
}

function confirmReject(jobId, applicationId, applicantName) {
  if (confirm(`Are you sure you want to reject ${applicantName}?\n\nThis will update their application status to "Rejected" and cannot be undone.`)) {
    const form = document.getElementById('rejectForm');
    form.action = `/jobs/${jobId}/reject/${applicationId}`;
    form.submit();
  }
}

function dismissSuccessAlert() {
  const alert = document.getElementById('successAlert');
  if (alert) {
    alert.style.transition = 'opacity 0.5s ease-out';
    alert.style.opacity = '0';
    setTimeout(() => {
      alert.remove();
    }, 500);
  }
}

function dismissAlert(alertId) {
  const alert = document.getElementById(alertId);
  if (alert) {
    alert.style.transition = 'opacity 0.5s ease-out';
    alert.style.opacity = '0';
    setTimeout(() => {
      alert.remove();
    }, 500);
  }
}

function viewApplicationDetails(app) {
  // Parse the notes field to extract structured information
  const parseNotesData = (notes) => {
    if (!notes) return {};
    
    const lines = notes.split('\n');
    const data = {};
    
    lines.forEach(line => {
      if (line.includes('Name:')) {
        const fullName = line.replace('Name:', '').trim();
        const nameParts = fullName.split(' ');
        data.firstName = nameParts[0] || '';
        data.lastName = nameParts.slice(1).join(' ') || '';
      } else if (line.includes('Current Job Title:')) {
        data.jobTitle = line.replace('Current Job Title:', '').trim();
      } else if (line.includes('Years of Experience:')) {
        data.yearsOfExperience = line.replace('Years of Experience:', '').trim();
      } else if (line.includes('LinkedIn:')) {
        data.linkedinUrl = line.replace('LinkedIn:', '').trim();
      } else if (line.includes('CV:')) {
        data.cvUrl = line.replace('CV:', '').trim();
      } else if (line.includes('Comments:')) {
        data.comments = line.replace('Comments:', '').trim();
      }
    });
    
    return data;
  };

  const parsedData = parseNotesData(app.notes);
  
  // Get modal elements
  const modal = document.getElementById('applicationModal');
  const modalTitle = document.getElementById('modalTitle');
  
  // Populate basic information
  modalTitle.textContent = `Application Details - ${app.displayName || 'Unknown Applicant'}`;
  
  // Populate personal information
  document.getElementById('modal-firstName').textContent = parsedData.firstName || 'N/A';
  document.getElementById('modal-lastName').textContent = parsedData.lastName || 'N/A';
  document.getElementById('modal-email').textContent = app.emailAddress || 'N/A';
  document.getElementById('modal-phone').textContent = app.phoneNumber || 'N/A';
  
  // Populate professional information
  document.getElementById('modal-jobTitle').textContent = parsedData.jobTitle || 'N/A';
  document.getElementById('modal-experience').textContent = parsedData.yearsOfExperience || 'N/A';
  
  // Populate LinkedIn with link if available
  const linkedinElement = document.getElementById('modal-linkedin');
  if (parsedData.linkedinUrl) {
    linkedinElement.innerHTML = `<a href="${parsedData.linkedinUrl}" target="_blank" rel="noopener noreferrer" class="text-kainos-primary hover:text-kainos-green underline">${parsedData.linkedinUrl}</a>`;
  } else {
    linkedinElement.textContent = 'N/A';
  }
  
  // Populate application status with appropriate styling
  const statusElement = document.getElementById('modal-status');
  const displayStatus = app.status === 'Accepted' ? 'Hired' : 
                       app.status === 'Pending' ? 'In Progress' : 
                       app.status || 'N/A';
  
  statusElement.textContent = displayStatus;
  statusElement.className = 'badge badge-lg px-3 py-1 font-semibold';
  
  if (app.status === 'Accepted' || app.status === 'Hired') {
    statusElement.classList.add('bg-kainos-green', 'text-white', 'border-kainos-green');
  } else if (app.status === 'Rejected') {
    statusElement.classList.add('bg-red-500', 'text-white', 'border-red-500');
  } else if (app.status === 'Reviewed') {
    statusElement.classList.add('bg-yellow-500', 'text-white', 'border-yellow-500');
  } else {
    statusElement.classList.add('bg-kainos-primary', 'text-white', 'border-kainos-primary');
  }
  
  document.getElementById('modal-date').textContent = app.formattedDate || 'N/A';
  document.getElementById('modal-applicationId').textContent = app.applicationID || 'N/A';
  
  // Handle cover letter section
  const coverLetterSection = document.getElementById('modal-coverLetterSection');
  if (app.coverLetter) {
    document.getElementById('modal-coverLetter').textContent = app.coverLetter;
    coverLetterSection.classList.remove('hidden');
  } else {
    coverLetterSection.classList.add('hidden');
  }
  
  // Handle comments section
  const commentsSection = document.getElementById('modal-commentsSection');
  if (parsedData.comments) {
    document.getElementById('modal-comments').textContent = parsedData.comments;
    commentsSection.classList.remove('hidden');
  } else {
    commentsSection.classList.add('hidden');
  }
  
  // Show/hide no details section
  const noDetailsSection = document.getElementById('modal-noDetailsSection');
  const hasDetails = app.coverLetter || parsedData.comments;
  
  if (hasDetails) {
    noDetailsSection.classList.add('hidden');
  } else {
    noDetailsSection.classList.remove('hidden');
  }
  
  // Show modal and prevent background scrolling
  modal.classList.remove('hidden');
  document.body.classList.add('modal-open');
  
  // Set up event listeners if not already set
  if (!modal.hasAttribute('data-listeners-added')) {
    const closeBtn = document.getElementById('closeModalBtn');
    
    // Close on X button click
    closeBtn.addEventListener('click', closeApplicationModal);
    
    // Close on background click
    modal.addEventListener('click', function(e) {
      if (e.target === modal) {
        closeApplicationModal();
      }
    });
    
    // Close on Escape key
    const escapeHandler = function(e) {
      if (e.key === 'Escape') {
        closeApplicationModal();
      }
    };
    document.addEventListener('keydown', escapeHandler);
    
    // Store the handler on the modal for later removal
    modal.escapeHandler = escapeHandler;
    modal.setAttribute('data-listeners-added', 'true');
  }
}

function closeApplicationModal() {
  const modal = document.getElementById('applicationModal');
  if (modal) {
    // Hide modal and re-enable background scrolling
    modal.classList.add('hidden');
    document.body.classList.remove('modal-open');
  }
}

// Auto-dismiss alerts after 15 seconds and scroll to them on load
window.addEventListener('DOMContentLoaded', function() {
  {% if applicationSubmitted %}
  // Handle application submitted alert
  const successAlert = document.getElementById('successAlert');
  if (successAlert) {
    setTimeout(function() {
      successAlert.scrollIntoView({ behavior: 'smooth', block: 'center' });
      successAlert.style.animation = 'pulse 2s ease-in-out 3';
    }, 100);
    
    setTimeout(function() {
      dismissSuccessAlert();
    }, 15000);
  }
  
  // Track application created event for analytics
  trackApplicationCreated('{{ jobRole.id }}', '{{ jobRole.name }}');
  {% endif %}

  {% if hired %}
  // Handle hire success alert
  const hireAlert = document.getElementById('hireAlert');
  if (hireAlert) {
    setTimeout(function() {
      hireAlert.scrollIntoView({ behavior: 'smooth', block: 'center' });
      hireAlert.style.animation = 'pulse 2s ease-in-out 3';
    }, 100);
    
    setTimeout(function() {
      dismissAlert('hireAlert');
    }, 10000);
  }
  
  // Track application hired event for analytics
  trackApplicationHired('{{ jobRole.id }}', '{{ jobRole.name }}');
  {% endif %}

  {% if rejected %}
  // Handle reject success alert
  const rejectAlert = document.getElementById('rejectAlert');
  if (rejectAlert) {
    setTimeout(function() {
      rejectAlert.scrollIntoView({ behavior: 'smooth', block: 'center' });
      rejectAlert.style.animation = 'pulse 2s ease-in-out 3';
    }, 100);
    
    setTimeout(function() {
      dismissAlert('rejectAlert');
    }, 10000);
  }
  
  // Track application rejected event for analytics
  trackApplicationRejected('{{ jobRole.id }}', '{{ jobRole.name }}');
  {% endif %}

  {% if error %}
  // Handle error alert
  const errorAlert = document.getElementById('errorAlert');
  if (errorAlert) {
    setTimeout(function() {
      errorAlert.scrollIntoView({ behavior: 'smooth', block: 'center' });
      errorAlert.style.animation = 'pulse 2s ease-in-out 3';
    }, 100);
    
    setTimeout(function() {
      dismissAlert('errorAlert');
    }, 10000);
  }
  {% endif %}
  
  // Populate CV links in the applications table
  {% if user and user.role === 'admin' and applications %}
  const applications = {{ applications | dump | safe }};
  
  applications.forEach(app => {
    const cvCell = document.querySelector(`.cv-link-cell[data-application-id="${app.applicationID}"]`);
    if (cvCell) {
      // Parse notes to extract CV URL
      let cvUrl = app.cvUrl;
      
      if (!cvUrl && app.notes) {
        const lines = app.notes.split('\n');
        lines.forEach(line => {
          if (line.includes('CV:')) {
            cvUrl = line.replace('CV:', '').trim();
          }
        });
      }
      
      // Update the cell with CV link or "Not uploaded" message
      if (cvUrl) {
        cvCell.innerHTML = `
          <a href="${cvUrl}" target="_blank" rel="noopener noreferrer"
             class="btn btn-sm text-white border-none hire-btn inline-flex items-center gap-2" style="background-color: #6EAA3A;">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2.5">
              <path stroke-linecap="round" stroke-linejoin="round" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
            </svg>
            <span>View CV</span>
          </a>
        `;
      } else {
        cvCell.innerHTML = `
          <span class="text-gray-500 text-sm italic">Not uploaded</span>
        `;
      }
    }
  });
  {% endif %}
});
</script>
{% endblock %}