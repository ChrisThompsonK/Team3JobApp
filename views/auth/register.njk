{% extends "layout.njk" %}

{% block content %}
<div class="min-h-screen flex items-center justify-center bg-gradient-to-br from-kainos-light to-base-100 py-12 px-4 sm:px-6 lg:px-8">
  <div class="max-w-md w-full space-y-8">
    <div>
      <h2 class="mt-6 text-center text-4xl font-bold kainos-text-gradient">
        Create your account
      </h2>
    </div>
    
    {% if error %}
    <div class="alert alert-error">
      <svg xmlns="http://www.w3.org/2000/svg" class="stroke-current shrink-0 h-6 w-6" fill="none" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z" />
      </svg>
      <span>{{ error }}</span>
    </div>
    {% endif %}

    <form class="mt-8 space-y-6" action="/auth/register" method="POST">
      <div class="rounded-md shadow-sm space-y-4">
        <div class="form-control">
          <label class="label" for="email">
            <span class="label-text">Email address</span>
          </label>
          <input 
            id="email" 
            name="email" 
            type="email" 
            autocomplete="email" 
            required 
            class="input input-bordered w-full"
            placeholder="Enter your email"
          >
        </div>
        
        <div class="form-control">
          <label class="label" for="password">
            <span class="label-text">Password</span>
          </label>
          <input 
            id="password" 
            name="password" 
            type="password" 
            autocomplete="new-password" 
            required 
            minlength="9"
            class="input input-bordered w-full"
            placeholder="Enter your password"
          >
          <label class="label">
            <span class="label-text-alt">Must be more than 8 characters with uppercase, lowercase, and a special character</span>
          </label>
        </div>
        
        <div class="form-control">
          <label class="label" for="confirmPassword">
            <span class="label-text">Confirm Password</span>
          </label>
          <input 
            id="confirmPassword" 
            name="confirmPassword" 
            type="password" 
            autocomplete="new-password" 
            required 
            minlength="9"
            class="input input-bordered w-full"
            placeholder="Confirm your password"
          >
        </div>
      </div>

      <div class="form-control mt-6">
        <button type="submit" class="btn-kainos shadow-lg hover:shadow-xl w-full inline-flex items-center justify-center gap-2">
          <span>Create Account</span>
        </button>
      </div>

      <div class="text-center">
        <p class="text-sm text-base-content/70">
          Already have an account? 
          <a href="/auth/login" class="text-kainos-green hover:text-kainos-primary font-semibold transition-colors">
            Sign in here
          </a>
        </p>
      </div>
    </form>
  </div>
</div>

<script>
// Client-side password validation
function validatePassword(password) {
  const errors = [];
  
  if (password.length <= 8) {
    errors.push('Password must be more than 8 characters long');
  }
  
  if (!/[A-Z]/.test(password)) {
    errors.push('Password must contain at least one uppercase letter');
  }
  
  if (!/[a-z]/.test(password)) {
    errors.push('Password must contain at least one lowercase letter');
  }
  
  if (!/[!@#$%^&*(),.?":{}|<>]/.test(password)) {
    errors.push('Password must contain at least one special character');
  }
  
  return errors;
}

// Real-time password validation
document.getElementById('password').addEventListener('input', function() {
  const password = this.value;
  const errors = validatePassword(password);
  
  if (errors.length > 0) {
    this.setCustomValidity(errors.join('. '));
  } else {
    this.setCustomValidity('');
  }
  
  // Also check password confirmation if it has a value
  const confirmPassword = document.getElementById('confirmPassword');
  if (confirmPassword.value) {
    if (password !== confirmPassword.value) {
      confirmPassword.setCustomValidity('Passwords do not match');
    } else {
      confirmPassword.setCustomValidity('');
    }
  }
});

// Password confirmation validation
document.getElementById('confirmPassword').addEventListener('input', function() {
  const password = document.getElementById('password').value;
  const confirmPassword = this.value;
  
  if (password !== confirmPassword) {
    this.setCustomValidity('Passwords do not match');
  } else {
    this.setCustomValidity('');
  }
});
</script>
{% endblock %}