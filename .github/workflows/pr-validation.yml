name: Pull Request

on:
  pull_request:
    branches: [main, develop]
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  pr-checks:
    name: PR Validation
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Validate PR title
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |
            feat
            fix
            docs
            style
            refactor
            perf
            test
            build
            ci
            chore
          scopes: |
            api
            ui
            auth
            db
            config
            deps
          requireScope: false
          subjectPattern: ^(?![A-Z]).+$
          subjectPatternError: |
            The subject "{subject}" found in the pull request title "{title}"
            didn't match the configured pattern. Please ensure that the subject
            doesn't start with an uppercase character.

      - name: Check for breaking changes
        run: |
          if git log --oneline ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }} | grep -i "BREAKING CHANGE"; then
            echo "‚ö†Ô∏è  Breaking changes detected in this PR"
          fi

      - name: Run full code quality checks
        run: |
          npm run check:ci
          npm run type-check
          npm run build
          npm run test:coverage

      - name: Check bundle size
        run: |
          npm run build
          du -sh dist/ || echo "No dist folder found"

      - name: Comment PR
        uses: actions/github-script@v7
        if: always()
        with:
          script: |
            const fs = require('fs');
            let comment = '## ü§ñ PR Validation Results\n\n';

            // Add job status
            if (process.env.JOB_STATUS === 'success') {
              comment += '‚úÖ All checks passed!\n';
            } else {
              comment += '‚ùå Some checks failed. Please review the logs.\n';
            }

            // Add coverage info if available
            if (fs.existsSync('./coverage/coverage-summary.json')) {
              const coverage = JSON.parse(fs.readFileSync('./coverage/coverage-summary.json', 'utf8'));
              const total = coverage.total;
              comment += `\n### Test Coverage\n`;
              comment += `- Lines: ${total.lines.pct}%\n`;
              comment += `- Branches: ${total.branches.pct}%\n`;
              comment += `- Functions: ${total.functions.pct}%\n`;
              comment += `- Statements: ${total.statements.pct}%\n`;
            }

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
        env:
          JOB_STATUS: ${{ job.status }}
